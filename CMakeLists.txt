CMAKE_MINIMUM_REQUIRED(VERSION 3.2)

MESSAGE("CMAKE_CURRENT_SOURCE_DIR: ${CMAKE_CURRENT_SOURCE_DIR}")
MESSAGE("CMAKE_GENERATOR: ${CMAKE_GENERATOR}")
MESSAGE("CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")

PROJECT(graphics C)

OPTION(GRAPHICS_EXTERNAL_BUILD "GRAPHICS_EXTERNAL_BUILD" OFF)
OPTION(GRAPHICS_EXAMPLES_BUILD "GRAPHICS_EXAMPLES_BUILD" ON)
OPTION(GRAPHICS_INSTALL "GRAPHICS_INSTALL" OFF)
OPTION(GRAPHICS_TESTS "GRAPHICS_TESTS" OFF)
OPTION(GRAPHICS_TESTS_IN_SOLUTIONS "GRAPHICS_TESTS_IN_SOLUTIONS" ON)

MESSAGE("GRAPHICS_EXTERNAL_BUILD: ${GRAPHICS_EXTERNAL_BUILD}")
MESSAGE("GRAPHICS_EXAMPLES_BUILD: ${GRAPHICS_EXAMPLES_BUILD}")
MESSAGE("GRAPHICS_INSTALL: ${GRAPHICS_INSTALL}")
MESSAGE("GRAPHICS_TESTS: ${GRAPHICS_TESTS}")
MESSAGE("GRAPHICS_TESTS_IN_SOLUTIONS: ${GRAPHICS_TESTS_IN_SOLUTIONS}")

IF(NOT GRAPHICS_EXTERNAL_BUILD)
    if(${CMAKE_C_COMPILER_ID} STREQUAL Clang)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL AppleClang)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL GNU)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL Intel)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL MSVC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /Wall /WX")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd5045")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4668")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4710")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4738")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4820")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4711")
    endif()
    
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib/${CMAKE_GENERATOR})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin/${CMAKE_GENERATOR})
    
    if(MSVC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /D_CRT_SECURE_NO_WARNINGS")
    endif()
ENDIF()

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

SET(ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
SET(INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)

set(GRAPHICS_SOURCES
    ${SOURCE_DIR}/graphics.c
    ${SOURCE_DIR}/ellipse.c
    ${SOURCE_DIR}/ellipse.h
    ${SOURCE_DIR}/rect.c
    ${SOURCE_DIR}/rect.h
    ${SOURCE_DIR}/rounded_rect.c
    ${SOURCE_DIR}/rounded_rect.h
    ${SOURCE_DIR}/line.c
    ${SOURCE_DIR}/line.h
    ${SOURCE_DIR}/struct.h
    ${SOURCE_DIR}/detail.h
    ${SOURCE_DIR}/detail.c
)

set(GRAPHICS_HEADERS
    ${INCLUDE_DIR}/graphics/config.h
    ${INCLUDE_DIR}/graphics/graphics.h
)

include_directories(${PROJECT_NAME} ${INCLUDE_DIR})

add_library(${PROJECT_NAME} STATIC ${GRAPHICS_SOURCES} ${GRAPHICS_HEADERS})

if(GRAPHICS_INSTALL)
    install(DIRECTORY include
        DESTINATION .
        FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h")

    install(TARGETS ${PROJECT_NAME}
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION lib)
endif()

if(GRAPHICS_EXAMPLES_BUILD)
    add_subdirectory(examples)
endif()

if(GRAPHICS_TESTS)
    include(CTest)
    enable_testing()
    
    add_subdirectory(tests)
else()
    if(GRAPHICS_TESTS_IN_SOLUTIONS)
        add_subdirectory(tests)
    endif()
endif()